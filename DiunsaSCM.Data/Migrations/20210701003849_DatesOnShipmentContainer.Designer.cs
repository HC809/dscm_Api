// <auto-generated />
using System;
using DiunsaSCM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DiunsaSCM.Data.Migrations
{
    [DbContext(typeof(DiunsaSCMContext))]
    [Migration("20210701003849_DatesOnShipmentContainer")]
    partial class DatesOnShipmentContainer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:.InventItems", "'InventItems', '', '1000000', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PurchCostDefinitions", "'PurchCostDefinitions', '', '1000000', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PurchOrders", "'PurchOrders', '', '1000000', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PurchOrderShipments", "'PurchOrderShipments', '', '1000000', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.PurchQuotations", "'PurchQuotations', '', '1', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.SalesPriceDefinitions", "'SalesPriceDefinitions', '', '1000000', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("Relational:Sequence:.Vendors", "'Vendors', '', '1000000', '1', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Barcode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BarcodeBatchId")
                        .HasColumnType("bigint");

                    b.Property<long>("BarcodeSourceId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ControlDigit")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BarcodeBatchId");

                    b.HasIndex("BarcodeSourceId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Barcode");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.BarcodeBatch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QtyGenerated")
                        .HasColumnType("int");

                    b.Property<int>("QtyRequested")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BarcodeBatch");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.BarcodeSource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("NextAvailable")
                        .HasColumnType("bigint");

                    b.Property<long>("RangeFirst")
                        .HasColumnType("bigint");

                    b.Property<long>("RangeLast")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BarcodeSource");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InventItemId", "Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.CommercialEvent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasFilter("[Description] IS NOT NULL");

                    b.ToTable("CommercialEvent");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Currency");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.CustomerPriceGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("CustomerPriceGroup");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.EmployeeDiscount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("EmployeeDiscount");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Incoterm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Incoterm");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventDim", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ColorId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SizeId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("SizeId");

                    b.HasIndex("InventItemId", "ColorId", "SizeId")
                        .IsUnique()
                        .HasFilter("[ColorId] IS NOT NULL AND [SizeId] IS NOT NULL");

                    b.ToTable("InventDim");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventDimGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ColorRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("ConfigurationRequired")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<bool>("SerialNumberRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("SizeRequired")
                        .HasColumnType("bit");

                    b.Property<bool>("StyleRequired")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("InventDimGroup");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowDiscount")
                        .HasColumnType("bit");

                    b.Property<bool>("BlckedForSale")
                        .HasColumnType("bit");

                    b.Property<long?>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("Format(NEXT VALUE FOR dbo.InventItems,'D8')");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<long?>("EmployeeDiscountId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("EstimatedCostDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("GrossDepth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("InventDimGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InventItemGroupId")
                        .HasColumnType("bigint");

                    b.Property<long?>("InventModelGroupId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ItemGroupId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ItemHierarchyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemSeasonalCategoryId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("NameAlias")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("TaxItemGroupHeadingId")
                        .HasColumnType("bigint");

                    b.Property<int>("UME")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.Property<string>("WebSiteDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WebSiteStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("EmployeeDiscountId");

                    b.HasIndex("InventDimGroupId");

                    b.HasIndex("InventItemGroupId");

                    b.HasIndex("InventModelGroupId");

                    b.HasIndex("ItemHierarchyId");

                    b.HasIndex("ItemSeasonalCategoryId");

                    b.HasIndex("NameAlias");

                    b.HasIndex("TaxItemGroupHeadingId");

                    b.HasIndex("VendorId");

                    b.HasIndex("Code", "NameAlias");

                    b.ToTable("InventItem");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItemGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("InventItemGroup");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItemPrepackBarcode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemBarcodeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InventItemId");

                    b.HasIndex("ItemBarcodeId");

                    b.ToTable("InventItemPrepackBarcode");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItemStoreConfiguration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowToSell")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StoreId");

                    b.HasIndex("InventItemId", "StoreId")
                        .IsUnique();

                    b.ToTable("InventItemStoreConfiguration");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventModelGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("InventModelGroup");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ItemBarcode", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ERPVariantCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InventDimId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Barcode")
                        .IsUnique()
                        .HasFilter("[Barcode] IS NOT NULL");

                    b.HasIndex("InventDimId");

                    b.HasIndex("InventItemId");

                    b.ToTable("ItemBarcode");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ItemHierarchy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InventItemGroupId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemHierarchyLevel")
                        .HasColumnType("int");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("InventItemGroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("ItemHierarchy");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ItemSeasonalCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("ItemSeasonalCategory");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Port", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CountryId");

                    b.ToTable("Port");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchCommercialDepartment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PurchCommercialDepartment");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchCostDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("'DC' + Format(NEXT VALUE FOR dbo.PurchCostDefinitions,'D8')");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ImportPolicyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShipmentImportCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingCompanyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("PurchCostDefinition");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchCostDefinitionLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CBM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CIFMarkupAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostWithCIF")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostWithCIFLocalCurrency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostWithLocalExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostWithLocalExpensesLocalCurrency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomsFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CustomsSelectiveFeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomsTariffCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomsTariffPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmptyField")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemBarcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineNumber")
                        .HasColumnType("int");

                    b.Property<decimal>("LocalExpensesMarkupAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PurchCostDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchLineAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PurchOrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyOrdered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SuggestedSalesPriceStore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SuggestedSalesPriceWholesaleCash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SuggestedSalesPriceWholesaleCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchCostDefinitionId");

                    b.ToTable("PurchCostDefinitionLine");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InventColorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InventSizeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LineAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NameAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchOrderHeaderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PurchUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QtyOrdered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchOrderHeaderId");

                    b.ToTable("PurchOrderDetail");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("'OC' + Format(NEXT VALUE FOR dbo.PurchOrders,'D8')");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PurchPaymentConditionCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchStatus")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipmentDateConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDateRequested")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WarehouseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("PurchOrderHeader");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentCrossDocking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ShipmentContainerDetailId")
                        .HasColumnType("bigint");

                    b.Property<long>("StoreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentContainerDetailId");

                    b.HasIndex("StoreId");

                    b.ToTable("PurchOrderShipmentCrossDocking");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PurchOrderDetailId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchOrderShipmentHeaderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("QtyOnShipment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchOrderDetailId");

                    b.HasIndex("PurchOrderShipmentHeaderId");

                    b.ToTable("PurchOrderShipmentDetail");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentHeader", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("'EC' + Format(NEXT VALUE FOR dbo.PurchOrderShipments,'D8')");

                    b.Property<long?>("CommercialEventId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EstimatedContainerQty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("IncotermId")
                        .HasColumnType("bigint");

                    b.Property<string>("InvoiceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PreparationShippingRouteId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchOrderHeaderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ReceiptDateConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDateConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDateRequested")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ShipmentImportId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShipmentTypeId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShippingCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShippingRouteId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CommercialEventId");

                    b.HasIndex("IncotermId");

                    b.HasIndex("PreparationShippingRouteId");

                    b.HasIndex("PurchOrderHeaderId");

                    b.HasIndex("ShipmentImportId");

                    b.HasIndex("ShipmentTypeId");

                    b.HasIndex("ShippingCompanyId");

                    b.HasIndex("ShippingRouteId");

                    b.ToTable("PurchOrderShipmentHeader");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentRouteStepSuscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PurchOrderShipmentHeaderId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShippingRouteStepId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PurchOrderShipmentHeaderId");

                    b.HasIndex("ShippingRouteStepId");

                    b.ToTable("PurchOrderShipmentRouteStepSuscription");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchPaymentCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("PurchPaymentCondition");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("'RQ' + Format(NEXT VALUE FOR dbo.PurchQuotations,'D8')");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CurrencyId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PurchCommercialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchOrderHeaderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchPaymentConditionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchQuotationApprovalRuleConditionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchQuotationApprovalRuleConditionStepId")
                        .HasColumnType("bigint");

                    b.Property<int>("PurchQuotationStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ShipmentDateConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDateRequested")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.Property<long?>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("PurchCommercialDepartmentId");

                    b.HasIndex("PurchOrderHeaderId");

                    b.HasIndex("PurchPaymentConditionId");

                    b.HasIndex("PurchQuotationApprovalRuleConditionId");

                    b.HasIndex("PurchQuotationApprovalRuleConditionStepId");

                    b.HasIndex("VendorId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("PurchQuotation");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApproval", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("PurchQuotationApproval");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PurchQuotationApprovalAction")
                        .HasColumnType("int");

                    b.Property<long>("PurchQuotationApprovalRuleConditionStepId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchQuotationId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchQuotationApprovalRuleConditionStepId");

                    b.HasIndex("PurchQuotationId");

                    b.ToTable("PurchQuotationApprovalLog");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PurchCommercialDepartmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchQuotationApprovalId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchRoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchCommercialDepartmentId");

                    b.HasIndex("PurchQuotationApprovalId");

                    b.HasIndex("PurchRoleId");

                    b.ToTable("PurchQuotationApprovalRole");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRule", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("PurchQuotationApprovalRule");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleCondition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Priority")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PurchQuotationApprovalRuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("PurchQuotationApprovalRuleId");

                    b.ToTable("PurchQuotationApprovalRuleCondition");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleConditionStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Order")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchQuotationApprovalRuleConditionId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchRoleId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchQuotationApprovalRuleConditionId");

                    b.HasIndex("PurchRoleId");

                    b.ToTable("PurchQuotationApprovalRuleConditionStep");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleConditionTerm", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComparisonValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LowerBound")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PurchQuotationApprovalRuleConditionComparisonOperation")
                        .HasColumnType("int");

                    b.Property<int>("PurchQuotationApprovalRuleConditionField")
                        .HasColumnType("int");

                    b.Property<long>("PurchQuotationApprovalRuleConditionId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UpperBound")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PurchQuotationApprovalRuleConditionId");

                    b.ToTable("PurchQuotationApprovalRuleConditionTerm");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ColorId")
                        .HasColumnType("bigint");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemBarcodeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("LineAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LineNum")
                        .HasColumnType("int");

                    b.Property<decimal>("PurchPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PurchQuotationId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("QtyOrdered")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("SizeId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("InventItemId");

                    b.HasIndex("ItemBarcodeId");

                    b.HasIndex("PurchQuotationId");

                    b.HasIndex("SizeId");

                    b.ToTable("PurchQuotationLine");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationLinePrepackDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("InventItemPrepackBarcodeId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PurchPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("PurchQuotationLineId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("InventItemPrepackBarcodeId");

                    b.HasIndex("PurchQuotationLineId");

                    b.ToTable("PurchQuotationLinePrepackDetail");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PurchRole");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.SalesPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CustomerPriceGroupId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPriceGroupId");

                    b.HasIndex("InventItemId", "CustomerPriceGroupId")
                        .IsUnique();

                    b.ToTable("SalesPrice");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.SalesPriceDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("'DP' + Format(NEXT VALUE FOR dbo.SalesPriceDefinitions,'D8')");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesPriceDefinitionStatus")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("SalesPriceDefinition");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.SalesPriceDefinitionLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerPriceGroupCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CustomerPriceGroupId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EstimatedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InventItemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("SalesPriceDefinitionId")
                        .HasColumnType("bigint");

                    b.Property<long?>("SalesPriceId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerPriceGroupId");

                    b.HasIndex("InventItemId");

                    b.HasIndex("SalesPriceDefinitionId");

                    b.HasIndex("SalesPriceId");

                    b.ToTable("SalesPriceDefinitionLine");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentContainer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContainerNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EquipmentPickupDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EstimatedGateUnloadDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PurchOrderShipmentHeaderId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RealGateUnloadDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ShipmentContainerTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ToShippingCompanyNotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Volume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ShipmentContainerTypeId");

                    b.HasIndex("PurchOrderShipmentHeaderId", "ContainerNumber")
                        .IsUnique()
                        .HasFilter("[ContainerNumber] IS NOT NULL");

                    b.ToTable("ShipmentContainer");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentContainerDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PurchOrderDetailId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchOrderShipmentDetailId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("QtyOnContainer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ShipmentContainerId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchOrderDetailId");

                    b.HasIndex("PurchOrderShipmentDetailId");

                    b.HasIndex("ShipmentContainerId");

                    b.ToTable("ShipmentContainerDetail");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentContainerType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CubicCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("LoadCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasFilter("[Description] IS NOT NULL");

                    b.ToTable("ShipmentContainerType");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentImport", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BLNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CurrentShippingRouteStepId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("EstimatedVolume")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EstimatedWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Incoterm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReceiptDateConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDateConfirmed")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDateRequested")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ShippingCompanyId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShippingRouteId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BLNumber")
                        .IsUnique()
                        .HasFilter("[BLNumber] IS NOT NULL");

                    b.HasIndex("CurrentShippingRouteStepId");

                    b.HasIndex("ShippingCompanyId");

                    b.HasIndex("ShippingRouteId");

                    b.ToTable("ShipmentImport");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentLogEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Completed")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PurchOrderShipmentHeaderId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShippingRouteStepId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PurchOrderShipmentHeaderId");

                    b.HasIndex("ShippingRouteStepId");

                    b.ToTable("ShipmentLogEntry");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasFilter("[Description] IS NOT NULL");

                    b.ToTable("ShipmentTypes");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingCompany", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FreeTimeBoxDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeTimeBoxHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeTimeChassisDays")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FreeTimeChassisHours")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("VendorAccount")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("ShippingCompany");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingRoute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PortOfDestinationId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PortOfOriginId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ShippingRouteStatusPresentationSchemaId")
                        .HasColumnType("bigint");

                    b.Property<int>("TransportationMethod")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("PortOfDestinationId");

                    b.HasIndex("PortOfOriginId");

                    b.HasIndex("ShippingRouteStatusPresentationSchemaId");

                    b.ToTable("ShippingRoute");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingRouteStatusPresentationSchema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("HighRisk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowRisk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NoRisk")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OnTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Description")
                        .IsUnique()
                        .HasFilter("[Description] IS NOT NULL");

                    b.ToTable("ShippingRouteStatusPresentationSchema");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingRouteStep", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ShippingRouteId")
                        .HasColumnType("bigint");

                    b.Property<long>("ShippingStepTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("StepNumber")
                        .HasColumnType("int");

                    b.Property<int>("TransitTimeDays")
                        .HasColumnType("int");

                    b.Property<int>("TransitTimeHours")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShippingRouteId");

                    b.HasIndex("ShippingStepTypeId");

                    b.ToTable("ShippingRouteStep");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingStepType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShippingStepERPAction")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("ShippingStepType");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Size", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InventItemId", "Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackStoreLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IncludedInSKUAnalysis")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("StoreLocationCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.TaxItemGroupHeading", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("TaxItemGroupHeading");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.TaxOnItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<long>("TaxItemGroupHeadingId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("TaxItemGroupHeadingId");

                    b.ToTable("TaxOnItem");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Unit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.UnitConvert", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Factor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("FromUnitId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("GrossDepth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossHeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossWeight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("GrossWidth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("InventItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("ToUnitId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FromUnitId");

                    b.HasIndex("ToUnitId");

                    b.HasIndex("InventItemId", "FromUnitId", "ToUnitId")
                        .IsUnique();

                    b.ToTable("UnitConvert");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.UserSetting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("UserSettings");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowPurchOrderShipments")
                        .HasColumnType("bit");

                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)")
                        .HasDefaultValueSql("'P' + Format(NEXT VALUE FOR dbo.Vendors,'D8')");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ERPRecId")
                        .HasColumnType("bigint");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VendorType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Vendor");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Warehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.ToTable("Warehouse");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Barcode", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.BarcodeBatch", "BarcodeBatch")
                        .WithMany("Barcodes")
                        .HasForeignKey("BarcodeBatchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.BarcodeSource", "BarcodeSource")
                        .WithMany()
                        .HasForeignKey("BarcodeSourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Color", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany("Colors")
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventDim", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany("InventDims")
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItem", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.HasOne("DiunsaSCM.Core.Entities.EmployeeDiscount", "EmployeeDiscount")
                        .WithMany()
                        .HasForeignKey("EmployeeDiscountId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventDimGroup", "InventDimGroup")
                        .WithMany()
                        .HasForeignKey("InventDimGroupId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventItemGroup", "InventItemGroup")
                        .WithMany()
                        .HasForeignKey("InventItemGroupId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventModelGroup", "InventModelGroup")
                        .WithMany()
                        .HasForeignKey("InventModelGroupId");

                    b.HasOne("DiunsaSCM.Core.Entities.ItemHierarchy", "InventMItemHierarchyodelGroup")
                        .WithMany()
                        .HasForeignKey("ItemHierarchyId");

                    b.HasOne("DiunsaSCM.Core.Entities.ItemSeasonalCategory", "ItemSeasonalCategory")
                        .WithMany()
                        .HasForeignKey("ItemSeasonalCategoryId");

                    b.HasOne("DiunsaSCM.Core.Entities.TaxItemGroupHeading", "TaxItemGroupHeading")
                        .WithMany()
                        .HasForeignKey("TaxItemGroupHeadingId");

                    b.HasOne("DiunsaSCM.Core.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItemPrepackBarcode", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany()
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ItemBarcode", "ItemBarcode")
                        .WithMany()
                        .HasForeignKey("ItemBarcodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.InventItemStoreConfiguration", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany("InventItemStoreConfigurations")
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ItemBarcode", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventDim", "InventDim")
                        .WithMany()
                        .HasForeignKey("InventDimId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany("ItemBarcodes")
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ItemHierarchy", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventItemGroup", "InventItemGroup")
                        .WithMany()
                        .HasForeignKey("InventItemGroupId");

                    b.HasOne("DiunsaSCM.Core.Entities.ItemHierarchy", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Port", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchCostDefinitionLine", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchCostDefinition", "PurchCostDefinition")
                        .WithMany("PurchCostDefinitionLines")
                        .HasForeignKey("PurchCostDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderDetail", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderHeader", "PurchOrderHeader")
                        .WithMany("PurchOrderDetails")
                        .HasForeignKey("PurchOrderHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentCrossDocking", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.ShipmentContainerDetail", "ShipmentContainerDetail")
                        .WithMany()
                        .HasForeignKey("ShipmentContainerDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentDetail", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderDetail", "PurchOrderOrderDetail")
                        .WithMany("PurchOrderShipmentDetails")
                        .HasForeignKey("PurchOrderDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderShipmentHeader", "PurchOrderShipmentHeader")
                        .WithMany("PurchOrderShipmentDetails")
                        .HasForeignKey("PurchOrderShipmentHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentHeader", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.CommercialEvent", "CommercialEvent")
                        .WithMany()
                        .HasForeignKey("CommercialEventId");

                    b.HasOne("DiunsaSCM.Core.Entities.Incoterm", "Incoterm")
                        .WithMany()
                        .HasForeignKey("IncotermId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRoute", "PreparationShippingRoute")
                        .WithMany()
                        .HasForeignKey("PreparationShippingRouteId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderHeader", "PurchOrderHeader")
                        .WithMany("PurchOrderShipmentHeaders")
                        .HasForeignKey("PurchOrderHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ShipmentImport", "ShipmentImport")
                        .WithMany("PurchOrderShipmentHeaders")
                        .HasForeignKey("ShipmentImportId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShipmentType", "ShipmentType")
                        .WithMany()
                        .HasForeignKey("ShipmentTypeId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingCompany", "ShippingCompany")
                        .WithMany()
                        .HasForeignKey("ShippingCompanyId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRoute", "ShippingRoute")
                        .WithMany()
                        .HasForeignKey("ShippingRouteId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchOrderShipmentRouteStepSuscription", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderShipmentHeader", "PurchOrderShipmentHeader")
                        .WithMany()
                        .HasForeignKey("PurchOrderShipmentHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRouteStep", "ShippingRouteStep")
                        .WithMany()
                        .HasForeignKey("ShippingRouteStepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotation", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchCommercialDepartment", "PurchCommercialDepartment")
                        .WithMany()
                        .HasForeignKey("PurchCommercialDepartmentId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderHeader", "PurchOrderHeader")
                        .WithMany()
                        .HasForeignKey("PurchOrderHeaderId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchPaymentCondition", "PurchPaymentCondition")
                        .WithMany()
                        .HasForeignKey("PurchPaymentConditionId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleCondition", "PurchQuotationApprovalRuleCondition")
                        .WithMany()
                        .HasForeignKey("PurchQuotationApprovalRuleConditionId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleConditionStep", "PurchQuotationApprovalRuleConditionStep")
                        .WithMany()
                        .HasForeignKey("PurchQuotationApprovalRuleConditionStepId");

                    b.HasOne("DiunsaSCM.Core.Entities.Vendor", "Vendor")
                        .WithMany()
                        .HasForeignKey("VendorId");

                    b.HasOne("DiunsaSCM.Core.Entities.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalLog", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleConditionStep", "PurchQuotationApprovalRuleConditionStep")
                        .WithMany()
                        .HasForeignKey("PurchQuotationApprovalRuleConditionStepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotation", "PurchQuotation")
                        .WithMany()
                        .HasForeignKey("PurchQuotationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRole", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchCommercialDepartment", "PurchCommercialDepartment")
                        .WithMany()
                        .HasForeignKey("PurchCommercialDepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApproval", "PurchQuotationApproval")
                        .WithMany("PurchQuotationApprovalRoles")
                        .HasForeignKey("PurchQuotationApprovalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchRole", "PurchRole")
                        .WithMany()
                        .HasForeignKey("PurchRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleCondition", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApprovalRule", "PurchQuotationApprovalRule")
                        .WithMany("PurchQuotationApprovalRuleConditions")
                        .HasForeignKey("PurchQuotationApprovalRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleConditionStep", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleCondition", "PurchQuotationApprovalRuleCondition")
                        .WithMany("PurchQuotationApprovalRuleConditionSteps")
                        .HasForeignKey("PurchQuotationApprovalRuleConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchRole", "PurchRole")
                        .WithMany()
                        .HasForeignKey("PurchRoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleConditionTerm", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationApprovalRuleCondition", "PurchQuotationApprovalRuleCondition")
                        .WithMany("PurchQuotationApprovalRuleConditionTerms")
                        .HasForeignKey("PurchQuotationApprovalRuleConditionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationLine", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany()
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ItemBarcode", "ItemBarcode")
                        .WithMany()
                        .HasForeignKey("ItemBarcodeId");

                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotation", "PurchQuotation")
                        .WithMany("PurchQuotationLines")
                        .HasForeignKey("PurchQuotationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.PurchQuotationLinePrepackDetail", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventItemPrepackBarcode", "InventItemPrepackBarcode")
                        .WithMany()
                        .HasForeignKey("InventItemPrepackBarcodeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchQuotationLine", "PurchQuotationLine")
                        .WithMany()
                        .HasForeignKey("PurchQuotationLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.SalesPrice", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.CustomerPriceGroup", "CustomerPriceGroup")
                        .WithMany()
                        .HasForeignKey("CustomerPriceGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany()
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.SalesPriceDefinitionLine", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.CustomerPriceGroup", "CustomerPriceGroup")
                        .WithMany()
                        .HasForeignKey("CustomerPriceGroupId");

                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany()
                        .HasForeignKey("InventItemId");

                    b.HasOne("DiunsaSCM.Core.Entities.SalesPriceDefinition", "SalesPriceDefinition")
                        .WithMany("SalesPriceDefinitionLines")
                        .HasForeignKey("SalesPriceDefinitionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.SalesPrice", "SalesPrice")
                        .WithMany()
                        .HasForeignKey("SalesPriceId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentContainer", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderShipmentHeader", "PurchOrderShipmentHeader")
                        .WithMany("ShipmentContainers")
                        .HasForeignKey("PurchOrderShipmentHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ShipmentContainerType", "ShipmentContainerType")
                        .WithMany()
                        .HasForeignKey("ShipmentContainerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentContainerDetail", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderDetail", "PurchOrderOrderDetail")
                        .WithMany("ShipmentContainerDetails")
                        .HasForeignKey("PurchOrderDetailId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderShipmentDetail", null)
                        .WithMany("ShipmentContainerDetails")
                        .HasForeignKey("PurchOrderShipmentDetailId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShipmentContainer", "ShipmentContainer")
                        .WithMany("ShipmentContainerLines")
                        .HasForeignKey("ShipmentContainerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentImport", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRouteStep", "ShippingRouteStep")
                        .WithMany()
                        .HasForeignKey("CurrentShippingRouteStepId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingCompany", "ShippingCompany")
                        .WithMany()
                        .HasForeignKey("ShippingCompanyId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRoute", "ShippingRoute")
                        .WithMany()
                        .HasForeignKey("ShippingRouteId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShipmentLogEntry", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.PurchOrderShipmentHeader", "PurchOrderShipmentHeader")
                        .WithMany("ShipmentLogEntries")
                        .HasForeignKey("PurchOrderShipmentHeaderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRouteStep", "ShippingRouteStep")
                        .WithMany()
                        .HasForeignKey("ShippingRouteStepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingRoute", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Port", "PortOfDestination")
                        .WithMany()
                        .HasForeignKey("PortOfDestinationId");

                    b.HasOne("DiunsaSCM.Core.Entities.Port", "PortOfOrigin")
                        .WithMany()
                        .HasForeignKey("PortOfOriginId");

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRouteStatusPresentationSchema", "ShippingRouteStatusPresentationSchema")
                        .WithMany()
                        .HasForeignKey("ShippingRouteStatusPresentationSchemaId");
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.ShippingRouteStep", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.ShippingRoute", "ShippingRoute")
                        .WithMany("ShippingRouteSteps")
                        .HasForeignKey("ShippingRouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.ShippingStepType", "ShippingStepType")
                        .WithMany()
                        .HasForeignKey("ShippingStepTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.Size", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany("Sizes")
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.TaxOnItem", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.TaxItemGroupHeading", "TaxItemGroupHeading")
                        .WithMany()
                        .HasForeignKey("TaxItemGroupHeadingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("DiunsaSCM.Core.Entities.UnitConvert", b =>
                {
                    b.HasOne("DiunsaSCM.Core.Entities.Unit", "FromUnit")
                        .WithMany()
                        .HasForeignKey("FromUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.InventItem", "InventItem")
                        .WithMany("UnitConverts")
                        .HasForeignKey("InventItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DiunsaSCM.Core.Entities.Unit", "ToUnit")
                        .WithMany()
                        .HasForeignKey("ToUnitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
